model:
  NAME: PTSegV2_Contrast
  in_channels: 6 
  beta: 0.999 # ema param

num_classes: 13
epochs: 100
batch_size: 2
val_batch_size: 1

val_fn: validate
ignore_index: null 

dataset:
  common:
    NAME: S3DIS
    data_root: data/S3DIS
    test_area: 5
    voxel_size: 0.04
    variable: True # whether to use the original number of points. The number of point per point cloud is variable. Defaults to False.
  train:
    split: train
    voxel_max: 40000 # difference from 24000 in pointnet++; 40000 for PTNet (limit for the GPU memory)
    loop: 30  # here, the training has been looped 30 times. therefore, the training epochs do not need much.
    presample: False
    views: False # put different aug on "main" and "prior" branch input data
    sources: True # load different scene data to "main" and "prior" branch
    contact: False # Mix3D: contact two scene as one input
    contact_minor: False # contact minor class scene
  val:
    split: val
    voxel_max: null
    presample: True 
  test:
    split: test
    voxel_max: null
    presample: False 

dataloader:
  num_workers: 8

datatransforms:
  train: [ChromaticAutoContrast, PointsToTensor, PointCloudScaling, PointCloudRotation, PointCloudJitter, ChromaticDropGPU, ChromaticNormalize]
  val: [PointsToTensor, ChromaticNormalize]
  kwargs:
    color_drop: 0.1
    gravity_dim: 2
    scale: [0.9, 1.1]
    angle: [0, 0, 1]
    jitter_sigma: 0.005
    jitter_clip: 0.02
    mean_std: False

cls_weighed_loss: False
criterion:
  NAME: CrossEntropy
  label_smoothing: 0.2
criterion_mask:
  NAME: MaskedCrossEntropy
  label_smoothing: 0.2
criterion_SupCon:
  NAME: SupConLoss
  temperature: 0.07
criterion_kd:
  NAME: CriterionKD
  temperature: 4
criterion_UnSupCon:
  NAME: PointInfoNCE
  temperature: 4

optimizer:
  NAME: 'adamw'  # performs 1 point better than adam
  weight_decay: 1.0e-4

# lr_scheduler:
sched: cosine
warmup_epochs: 0
min_lr: 1.0e-5
lr: 0.01  # 'sgd':0.1; 'adamw':0.01

grad_norm_clip: 10
use_voting: False
# ---------------------------------------------------------------------------- #
# io and misc
# ---------------------------------------------------------------------------- #
log_dir: 's3dis'
save_freq: -1 # save epoch every xxx epochs, -1 only save last and best. 
val_freq: 1

#############loss weight#################
loss_l1: 1.0
loss_struct: 1.0
loss_ce: 1.0
loss_prior_supcon: 1.0
loss_ce_prior: 1.0
