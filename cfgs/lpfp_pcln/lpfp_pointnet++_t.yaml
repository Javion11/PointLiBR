model:
  NAME: StackedSeg
  stem_layer: 'kpconv' # 'mlp', 'kpconv', False
  stem_oupchannels: 32 # add a stem mlp before all stacked pointnet++ module
  stacked_num: 4
  encoder_args: 
    NAME: PointNet2Encoder
    in_channels: 4
    width: null
    strides: [4, 4, 4, 4]
    layers: 3
    use_res: False
    mlps: [[[32, 32, 64]],  # stage 1: 96
        [[64, 64, 128]], # stage 2: 256
        [[128, 128, 256]], # stage 3: 512
        [[256, 256, 512]]] # stage 4: 1024
    radius: 0.1
    num_samples: 32
    sample_method: fps
    aggr_args:
      NAME: 'convpool'
      feature_type: 'dp_fj'
      anisotropic: False
      reduction: 'max'
    group_args:
      NAME: 'ballquery'
      use_xyz: True
    conv_args:
      order: conv-norm-act
    act_args:
      act: 'relu'
    norm_args:
      norm: 'bn'
  decoder_args:
    NAME: PointNet2Decoder
    fp_mlps: [[128, 128, 128], [256, 128], [256, 256], [256, 256]]
  cls_args:
    NAME: SegHead
    num_classes: 13
    in_channels: null

datatransforms:
  train: [ChromaticAutoContrast, PointsToTensor, PointCloudScaling, PointCloudFloorCentering, PointCloudJitter, ChromaticDropGPU, ChromaticNormalize]
  val: [PointsToTensor, PointCloudFloorCentering, ChromaticNormalize]
  vote: [ChromaticDropGPU]
  kwargs:
    color_drop: 0.2
    gravity_dim: 2
    scale: [0.9, 1.1]
    jitter_sigma: 0.005
    jitter_clip: 0.02

batch_size: 2
cls_weighed_loss: False
lovasz: False # whether to use lovasz-softmax loss
lovasz_weight: 0
criterion:
  NAME: CrossEntropy
  label_smoothing: 0.2

epochs: 100
# lr_scheduler:
sched: cosine
warmup_epochs: 0

min_lr: 1.0e-5 #
lr: 0.01 # LR linear rule. 0.002 for 32 batches
  